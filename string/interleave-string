//https://leetcode.com/problems/interleaving-string/

class Solution {
public:

   bool helper(string &s1,string &s2,string &s3,int i,int j,int k,vector<vector<int>>&dp)
    {
        
        if(s3.size()==k && s1.size()==i && s2.size()==j)
        {
            return true;
        }
        
        
        if(s3.size()==k)
        {
            return false;
        }
        
        if(dp[i][j]!=-1)
        {
            return dp[i][j];
        }
        
        
        
        bool ans=false;
        if(  s3[k]==s1[i]  && s3[k]==s2[j])
        {
            ans= (helper(s1,s2,s3,i+1,j,k+1,dp) || helper(s1,s2,s3,i,j+1,k+1,dp));
        }
        else if(    s3[k]==s1[i])
        {
            ans=helper(s1,s2,s3,i+1,j,k+1,dp);
        }
        else if( s3[k]==s2[j])
        {
            ans=helper(s1,s2,s3,i,j+1,k+1,dp);
        }
        
        return dp[i][j]=ans;
        
        
    }
    bool isInterleave(string s1, string s2, string s3) {
        

       vector<int>dp(s2.size(),0);

        int n=s1.size();
        int m=s2.size();

        int k=s3.size()-1;

        for(int i=n-1;i>=0;i--)
        {
            for(int j=0;j<m;j++)
            {
                if(s3[k] == s1[i] || s3[k]==s2[i])
                {
                    if(s3.size()==k && i==0 && j==0)
                    {
                        return true;
                    }
                }
                if(s3.size()==k)
                {
                    return false;
                }
                
                if(dp[i][j]!=-1)
                {
                    return dp[i][j];
                }
            }
        }



        // return helper(s1,s2,s3,0,0,0,dp);
    }
};