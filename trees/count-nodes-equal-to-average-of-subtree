https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/?envType=daily-question&envId=2023-11-03


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    pair<int,int>helper(TreeNode*root)
    {
        pair<int,int>ans;
        if(!root)
        {
            ans.first=0;
            ans.second=0;
            return ans;
        }


        pair<int,int>left=helper(root->left);
        pair<int,int>right=helper(root->right);
        
        int sum=left.first+right.first+root->val;
        int n=left.second+right.second+1;
        int avg =(sum/n);
        if(avg==root->val)
        {
            cnt++;
        }

        ans.first=sum;
        ans.second=n;
        return ans;
    }

    int cnt;
    int averageOfSubtree(TreeNode* root) {
        
        cnt=0;

        helper(root);

        return cnt;


    }
};
