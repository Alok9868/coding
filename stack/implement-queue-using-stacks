https://leetcode.com/problems/implement-queue-using-stacks/description/?envType=daily-question&envId=2024-01-29

class MyQueue {

    Stack<Integer> st1;
    Stack<Integer> st2;
    public void push(Integer x) {

        st1.push(x);
    }

    public int pop() {

        if (st2.empty()) {
            while (!st1.empty()) {
                st2.push(st1.pop());
            }
        }

        if (st2.empty()) {
            return -1;
        }
        return st2.pop();
    }

    public int peek() {

        if (st2.empty()) {
            while (!st1.empty()) {
                st2.push(st1.pop());
            }
        }

        if (st2.empty()) {
            return -1;
        }
        return st2.peek();
    }

    public boolean empty() {

        return st1.empty() && st2.empty();

    }


    public MyQueue() {
        
        st1=new Stack<>();
        st2=new Stack<>();
    }
    
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */
