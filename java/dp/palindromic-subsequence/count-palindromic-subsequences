https://www.geeksforgeeks.org/problems/count-palindromic-subsequences/1

//{ Driver Code Starts
import java.util.*;

class GFG {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        sc.nextLine();
        while (t > 0) {
            String str = sc.nextLine();
            // System.out.println(str.length());
            Solution ob = new Solution();
            System.out.println(ob.countPS(str));
            t--;

            System.out.println("~");
        }
    }
}
// } Driver Code Ends


/*You are required to complete below method */

class Solution {
    
     int helper(String s, int i, int j,int [][]dp) {
        if (i > j) {
            return 0;
        }

        if (i == j) {
            return 1;
        }

        if (dp[i][j] != 0) {
            return dp[i][j];
        }

        if (s.charAt(i) == s.charAt(j)) {
            dp[i][j] = helper(s, i + 1, j, dp) + helper(s, i, j - 1, dp) + 1;
        } else {
            dp[i][j] = helper(s, i + 1, j, dp) + helper(s, i, j - 1, dp) - helper(s, i + 1, j - 1, dp);
        }

        return dp[i][j];

    }

    
    int countPS(String s) {
        // Your code here
        int[][] dp = new int[s.length() + 1][s.length() + 1];

        for (int i = 0; i <= s.length(); i++) {
            for (int j = 0; j <= s.length(); j++) {
                dp[i][j] = 0;
            }
        }


        return helper(s,0,s.length()-1,dp);
        
        
    }
}
