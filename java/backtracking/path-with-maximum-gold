https://leetcode.com/problems/path-with-maximum-gold/description/?envType=daily-question&envId=2024-05-13

class Solution {

    int n,m;
    boolean isValid(int x, int y)
    {
        if(x>=0 && x<n &&  y>=0 && y<m)
        {
            return true;
        }
        return false;
    }

    int []xdirs={0,0,1,-1};
    int []ydirs={1,-1,0,0};
    public int backTracking(int [][]grid,int x,int y)
    {
        int temp=grid[x][y];
        grid[x][y]=0;
        int ans=0;
        for (int k=0;k<4;k++)
        {
            int x_new=x+xdirs[k];
            int y_new=y+ydirs[k];
            if (isValid(x_new,y_new)  && grid[x_new][y_new]>0 )
            {
                ans=Math.max(backTracking(grid,x_new,y_new),ans);
            }
        }
        grid[x][y]=temp;
        return ans+temp;
    }
    public int getMaximumGold(int[][] grid) {

        n=grid.length;
        m=grid[0].length;
        int ans=0;
        boolean [][]vis=new boolean[n][m];
        for (int i=0;i<n;i++)
        {
            for (int j=0;j<m;j++)
            {
                if (grid[i][j]>0 && !vis[i][j])
                {
                    vis[i][j]=true;
                    ans=Math.max(backTracking(grid,i,j),ans);
                }
            }
        }

        return ans;
    }
}
