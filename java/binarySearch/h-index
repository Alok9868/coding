https://leetcode.com/problems/h-index/description/



class Solution {

 public static Boolean upperBound(int[] citations, int target) {
        // write upper bound funciton , so that we can find the lowest no >=target
        // and then we can say that we have h index or not
        int low = 0;
        int high = citations.length - 1;
        int idx = -1;
        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (citations[mid] >= target) {
                idx = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }


        if (idx == -1) {
            return false;
        }


        // ele greater than target
        int ge_than_target = citations.length - idx;

        return ge_than_target >= target;

    }


    public int hIndex(int[] citations) {
        // 3 0 6 1 5
        // 0 1 3 5 6 
        // 1 1 3 
        // h index = 1 
        int n = citations.length;
        Arrays.sort(citations);
        int ans = 0;


//        [1,3,1]
        int low = 0; // 0
        int high = citations[n - 1]; // 3

        while (low <= high) {
            int mid = (high - low) / 2 + low; //1
            if (upperBound(citations, mid)) {
                ans = Math.max(ans, mid);
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }

        return ans;
    }
}
