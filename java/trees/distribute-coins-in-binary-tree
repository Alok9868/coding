/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

https://leetcode.com/problems/distribute-coins-in-binary-tree/?envType=daily-question&envId=2024-05-17
class Solution {

    int moves;
    public int helper(TreeNode root)
    {
        if(root==null)
        {
            return 0;
        }

        int total_req=0;
        int left_extra=helper(root.left); // 1 
        int right_extra=helper(root.right); // 1
        moves+=Math.abs(left_extra)+Math.abs(right_extra);
        return (left_extra+right_extra+root.val-1);
    }

    public int distributeCoins(TreeNode root) {
        moves=0;
        helper(root);
        return moves;
        
    }
}
