https://leetcode.com/problems/minimum-operations-to-make-a-uni-value-grid/?envType=daily-question&envId=2024-11-13


class Solution {
    public int minOperations(int[][] grid, int x) {
        int m = grid.length;
        int n = grid[0].length;
        int size = m * n;
        int[] temp = new int[m * n];

        int k = 0;

        int rem = grid[0][0] % x;

        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[i].length; j++) {

                if (grid[i][j] % x != rem) {
                    return -1;
                }
                temp[k++] = grid[i][j];
            }
        }

        Arrays.sort(temp);

        int mid = size / 2;
        int ans = 0;
        // try to convert with this mid

        for (int i = 0; i < size; i++) {

            int diff = Math.abs(temp[i] - temp[mid]);

            int steps = diff / x;
            ans += steps;
        }

        return ans;
    }
}
