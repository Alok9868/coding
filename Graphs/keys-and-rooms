https://leetcode.com/problems/keys-and-rooms
https://www.youtube.com/watch?v=qDHd9n_XGQ8&list=PLpIkg8OmuX-I_49pdy1XFY6OcATnxUrrO&index=5&ab_channel=codestorywithMIK

// THIS QUESTION CAN ALSO BE SOLVED USING DFS AND BFS , FOR THAT WE HAVE TO CREATE ADJ LIST FIRST.
class Solution {
public:
    bool canVisitAllRooms(vector<vector<int>>& rooms) {


        unordered_map<int,int>umap;
        queue<int>pq;
        pq.push(0);
        umap[0]=1;
        while(!pq.empty())
        {
            int top=pq.front();
            pq.pop();
            umap[top]+=1;
            for(int j=0;j<rooms[top].size();j++)
            {
                if(umap.find(rooms[top][j])==umap.end())
                {
                    pq.push(rooms[top][j]);
                }
                
            }
        }


        for(int i=0;i<rooms.size();i++)
        {
            if(umap.find(i)==umap.end())
            {
                return false;
            }
        }

        return true;      
    }
};
