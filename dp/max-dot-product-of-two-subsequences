https://leetcode.com/problems/max-dot-product-of-two-subsequences/description/?envType=daily-question&envId=2023-10-08

class Solution {
public:

    bool checkIfValid(int i, int j)
    {
        if(i==n || j==m)
        {
            return false;
        }

        return true;
    }
    int n , m;
    int helper(vector<int>& nums1, vector<int>& nums2 , int i ,int j , 
     vector<vector<int>>&dp )
    {
        if(i==n || j==m)
        {
            return 0;
        }

        if(dp[i][j]!=1e9)
        {
            return dp[i][j];
        }
        int multiply=(nums1[i]*nums2[j]);
        // if(checkIfValid(i+1,j+1))
        // {
            multiply+=helper(nums1,nums2,i+1,j+1,dp);
        // }

        int first=INT_MIN,second=INT_MIN;
        //  if(checkIfValid(i+1,j))
        // {
            first=helper(nums1,nums2,i+1,j,dp);
        // }
        //  if(checkIfValid(i,j+1))
        // {
            second=helper(nums1,nums2,i,j+1,dp);
        // }


        int ans=max({first,second,multiply});
        
        return dp[i][j]=ans;

    }

    int maxDotProduct(vector<int>& nums1, vector<int>& nums2) {

        
        n=nums1.size();
        m=nums2.size();
        
       vector<vector<int>>dp(n,vector<int>(m,1e9));
        int ans=helper(nums1,nums2,0,0,dp);
        if(ans!=0)
        {
            return ans;
        }

       int mini1=INT_MAX,mini2=INT_MAX;
       int maxi1=INT_MIN,maxi2=INT_MIN;
       for(int i=0;i<nums1.size();i++)
       {
           mini1=min(mini1,nums1[i]);
           maxi1=max(maxi1,nums1[i]);
       }

        for(int j=0;j<nums2.size();j++)
        {
            mini2=min(mini2,nums2[j]);
            maxi2=max(maxi2,nums2[j]);
        }


        if(mini1<0)
        {
            return (maxi1*mini2);
        }
        else
        {
            return (maxi2*mini1);
        }


        return (mini1*mini2);




    }
};
