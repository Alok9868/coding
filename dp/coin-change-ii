https://leetcode.com/problems/coin-change-ii/

class Solution {
public:
    int helper(vector<int>& coins,int amount,int idx, vector<vector<int>>&dp)
    {
        
        if(amount==0)
        {
            return 1;
        }

        if(amount <0 || idx==coins.size())
        {
            return 0;
        }


        if(dp[idx][amount]!=-1)
        {
            return dp[idx][amount];
        }


        int take=helper(coins,amount-coins[idx],idx,dp);
        int nottake=helper(coins,amount,idx+1,dp);
        return dp[idx][amount]=take+nottake;
    }
    int change(int amount, vector<int>& coins) {
        
        int n=coins.size();

        vector<vector<int>>dp(n,vector<int>(amount+1,-1));

        return helper(coins,amount,0,dp);


    }
};
