
//https://leetcode.com/problems/search-in-rotated-sorted-array/

class Solution {
public:


    int binarySearch(vector<int>& nums, int target,int low,int high)
    {
      
        while(low<=high)
        {
            int mid=(high-low)/2+low;
            if(nums[mid]==target)
            {
                return mid;
            }
            else if(nums[mid]>target)
            {
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        }
        return -1;
    }

    int search(vector<int>& nums, int target) {
        
        if(nums.size()==1)
        {
            if(nums[0]==target)
            {
                return 0;
            }
            return -1;
        }

        int low=0;
        int high=nums.size()-1;
        while(low<high)
        {
            int mid=(high-low)/2+low;
            if(nums[mid]>nums[high])
            {
                low=mid+1;
            }
            else
            {
                high=mid;
            }
        }

        int left=binarySearch(nums,target,0,high-1);
        if(left>=0)
        {
            return left;
        }
        int right=binarySearch(nums,target,high,nums.size()-1);
        if(right>=0)
        {
            return right;
        }
        return -1;



    }
};