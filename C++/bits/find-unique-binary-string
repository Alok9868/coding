https://leetcode.com/problems/find-unique-binary-string/?envType=daily-question&envId=2023-11-16
class Solution {
public:

    string convert_to_binary(int num , int n)
    {
        string temp(n,' ');
        while(n--)
        {
            int no=num&1;
            if(no)
            {
                temp[n]='1';
            }
            else
            {
                temp[n]='0';
            }
            num=num>>1;
        }

        return temp;
    }
    string findDifferentBinaryString(vector<string>& nums) {
        
        int n=nums[0].length();
        unordered_set<int>set;
        for(auto &s:nums)
        {
            int num=0;
            for(int i=n-1;i>=0;i--)
            {
                if(s[i]=='1')
                {
                    num+=pow(2,n-i-1);
                }
            }
            set.insert(num);
        }

        int maxi=pow(2,n);
        for(int i=0;i<maxi;i++)
        {
            if(set.find(i)==set.end())
            {
                return convert_to_binary(i,n);
            }
        }

        return "";




    }
};



//Approach-3 (By discarding matching characters in each position)
//T.C : O(n)
//S.C : O(1)
class Solution {
public:
    string findDifferentBinaryString(vector<string>& nums) {
        int n = nums.size();
        
        string result;
        
        for(int i = 0; i<n; i++) {
            char ch = nums[i][i];
            
            result += (ch == '0') ? "1" : "0";
        }
        
        return result;
    }
};
