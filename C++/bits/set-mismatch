https://leetcode.com/problems/set-mismatch/description/?envType=daily-question&envId=2024-01-22

class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        
        int xorAll=0;
        int xorNums=0;
        int n=nums.size();
        for(int i=1;i<=n;i++)
        {
            xorAll^=i;
        }

        //1^ 2. - rightmostsetbit - 01 
        //1^1 
        for(auto &num:nums)
        {
            xorNums^=num;
        }

        int xorDuplicateMissing=xorNums^xorAll;
        int rightmostSetBit=xorDuplicateMissing &(-xorDuplicateMissing);

        int duplicate=0;
        int missing =0;
        // 1    - 1 ^ 1 = 0
        // 2 ^2 ^4 - 4 

        //1234 
        for(auto &num:nums)
        {
            if(rightmostSetBit&num)
            {
                missing^=num;
            }
            else
            {
                duplicate^=num;
            }
        }


        for(int i=1;i<=n;i++)
        {
            if(rightmostSetBit&i)
            {
                missing^=i;
            }
            else
            {
                duplicate^=i;
            }
        }

        for(auto &num:nums)
        {
            if(num==duplicate)
            {
                return {duplicate,missing};
            }
        }

        return {missing,duplicate};


    }
};
