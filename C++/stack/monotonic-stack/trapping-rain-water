https://leetcode.com/problems/trapping-rain-water/description/?envType=daily-question&envId=2024-04-12


class Solution {
public:
    int trap(vector<int>& height) {
        
        int n=height.size();
        
        vector<int> left(n) , right(n);
        left[0]=height[0];
        right[n-1]=height[n-1];
        
        for(int i=1 ; i<n ;i++)
        {
            left[i] = max(left[i-1] , height[i]); 
            // storing the maximum left wall for that ith 
            // including itself
        }
        
        for(int i=n-2;i>=0;i--)
        {
            right[i]=max(right[i+1] , height[i]);
            // storing the maximum rightmost walls for ith index including itself 
        }
        
        int ans =0;
        
        for(int i=0;i<n;i++)
        {
            // take the minimum walls from rightmost & leftmost larger ones 
            ans+=  min(right[i] , left[i]) - height[i];                
            // min(left[i] , right[i]) - height[i] 
        }
        
        return ans;
        
    }
};
