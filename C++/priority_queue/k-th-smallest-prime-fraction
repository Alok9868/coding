https://leetcode.com/problems/k-th-smallest-prime-fraction/description/?envType=daily-question&envId=2024-05-10

class Solution {
public:

    class comp 
    {
        public:
        bool operator()(pair<double,pair<int,int>>&a , pair<double,pair<int,int>>&b)
        {
            return a.first>b.first;
        }
    };
    

    vector<int> kthSmallestPrimeFraction(vector<int>& nums, int k) {

        priority_queue<pair<double,pair<int,int>>,vector<pair<double,pair<int,int>>>,comp>pq;
        int n=nums.size();
        for(int i=0;i<n-1;i++)
        {
            double fraction=((double)nums[i]/nums[n-1]);
            pq.push({fraction,{i,n-1}});
        }

        while(k>1)
        {
            k--;
            int min_idx=pq.top().second.first;
            int max_idx=pq.top().second.second;
            pq.pop();
            max_idx--;
            if(min_idx==max_idx)
            {
                continue;
            }
            double fraction=((double)nums[min_idx]/nums[max_idx]);
            pq.push({fraction,{min_idx,max_idx}});
        }

        
        vector<int>result;
        result.push_back(nums[pq.top().second.first]);
        result.push_back(nums[pq.top().second.second]);
        return result;

        
    }
};
