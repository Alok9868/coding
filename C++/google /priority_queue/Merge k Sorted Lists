/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    class comp
    {
        public:
        bool operator()(ListNode*a,ListNode*b)
        {
            {
            if(a->val < b->val)
            {
                return false;
            }
            return true;
            }
        }
    };

    ListNode* mergeKLists(vector<ListNode*>& lists) {

        if(lists.size()==0)
        {
            return NULL;
        }

        priority_queue<ListNode*,vector<ListNode*>,comp>pq;
        ListNode*head=new ListNode(0);

        for(int i=0;i<lists.size();i++)
        {

            if(lists[i]!=NULL)
            {
                pq.push(lists[i]);
            }

        }

        ListNode*temp=head;


        while(!pq.empty())
        {
            ListNode*top=pq.top();
            pq.pop();
            temp->next=top;
            temp=temp->next;
            if(top->next!=NULL)
            {
                pq.push(top->next);
            }
        }


        return head->next;
    }
};