https://leetcode.com/problems/continuous-subarray-sum/description/?envType=daily-question&envId=2024-06-08
class Solution {
public:
    bool checkSubarraySum(vector<int>& nums, int k) {
        
        int n=nums.size();
        unordered_map<int,int>umap;
        int sum=0;
        umap[0]=-1; 
        for(int i=0;i<n;i++)
        {
            sum+=nums[i];
            int rem=sum%k;
            if(umap.find(rem)!=umap.end())
            {
                if(i-umap[rem]>=2)
                {
                    return true;    
                }
                continue;
            }
            umap[rem]=i;  
        }
        
        return false;
        
    }
};
