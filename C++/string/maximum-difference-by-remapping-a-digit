https://leetcode.com/problems/maximum-difference-by-remapping-a-digit/?envType=daily-question&envId=2025-06-14


class Solution {
public:

    string changetToChar(string &num,char c, char &target)
    {
        int n=num.size();
        for(int i=0;i<n;i++)
        {
            if(num[i]==c)
            {
                num[i]=target;
            }
        }
        return num;
    }

    int minMaxDifference(int num) {


        // get the no less than 9 from left 
        // get the no greater than 0 from left 
        // sub both 


        // 99
        // 00 
        // 99 

        string str = to_string(num);
        char nine='9';
        for(char &c:str){
            if(c<nine)
            {
                // change this char along with all char present in num to 9 
                str=changetToChar(str,c,nine);
                break;
            }
        }

        int maxi=stoi(str);
        // cout<<maxi<<endl;
        char zero='0';
        str=to_string(num);
        for(char &c:str){
            if(c>zero)
            {
                // change this char along with all char present in num to 9 
                str=changetToChar(str,c,zero);
                break;
            }
        }

        int mini=stoi(str);
        // cout<<mini<<endl;
        return maxi-mini;

    }
};
