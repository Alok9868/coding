https://leetcode.com/problems/minimum-number-of-operations-to-make-array-empty/description/?envType=daily-question&envId=2024-01-04
class Solution {
public:

    int minSteps(int num , vector<int>&dp)
    {

        if(num<0)
        {
            return 1e7;
        }
        if(num==0)
        {
            return 0;
        }
        if(dp[num]!=-1)
        {
            return dp[num];
        }

        int first=minSteps(num-2 , dp)+1;
        int second=minSteps(num-3 ,dp )+1;
        return dp[num]=min(first,second);

    }
    int minOperations(vector<int>& nums) {
        
        int n=nums.size();
        unordered_map<int,int>umap;
        for(int i=0;i<n;i++)
        {
            umap[nums[i]]++;
        }

        int ans=0;
        vector<int>dp(n+1,-1);
        for(auto it:umap)
        {
            if(it.second==1)
            {
                return -1;
            }
            ans+=minSteps(it.second , dp);
        }


        return ans;



    }
};

// optimizations 2nd approach 
class Solution {
public:
    int minOperations(vector<int>& nums) {
        
        int n=nums.size();
        unordered_map<int,int>umap;
        for(int i=0;i<n;i++)
        {
            umap[nums[i]]++;
        }

        int ans=0;
        for(auto it:umap)
        {
            if(it.second==1)
            {
                return -1;
            }
            ans+=(it.second)/3 ;
            if(it.second%3)
            {
                ans++;
            }
        }


        return ans;



    }
};
