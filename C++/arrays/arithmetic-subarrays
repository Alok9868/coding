https://leetcode.com/problems/arithmetic-subarrays/?envType=daily-question&envId=2023-11-23


class Solution {
public:

    bool checkIfArtithmeticSequence(vector<int>&temp)
    {
        if(temp.size()<=2)
        {
            return true;
        }

        int diff=temp[1]-temp[0];
        for(int i=2;i<temp.size();i++)
        {
            int curr_diff=temp[i]-temp[i-1];
            if(diff!=curr_diff)
            {
                return false;
            }
        }

        return true;



    }

    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r) {
        

        int n=nums.size();
        int m=l.size();
        vector<bool>ans;
        for(int i=0;i<m;i++)
        {
            int l_idx=l[i];
            int r_idx=r[i];
            vector<int>temp;
            for(int idx=l_idx;idx<=r_idx;idx++)
            {   
                temp.push_back(nums[idx]);
            }
            sort(temp.begin(),temp.end());
            ans.push_back(checkIfArtithmeticSequence(temp));
        }


        return ans;

    }
};
