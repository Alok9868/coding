
https://leetcode.com/problems/contiguous-array/
class Solution {
public:
    int findMaxLength(vector<int>& nums) {
        int n=nums.size();
        int curr_sum=0;
        int max_len=0;
        unordered_map<int,int>umap;
        umap[0]=0;
        for(int i=0;i<n;i++)
        {
            if(nums[i]==0)
            {
                curr_sum+=-1;
            }
            else
            {
                curr_sum+=1;
            }

            if(umap.find(curr_sum)!=umap.end())
            {
                max_len=max(max_len,i-umap[curr_sum]+1);
            }
            if(umap.find(curr_sum)==umap.end())
            {
                // cout<<curr_sum<<" "<<i<<endl;
                umap[curr_sum]=i;
            }
        }   

    

        if(max_len%2==0)
        {
            return max_len;
        }

        return max_len-1;
    }
};
