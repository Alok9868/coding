
https://leetcode.com/problems/longest-harmonious-subsequence/?envType=daily-question&envId=2025-06-30

class Solution {
public:
    int findLHS(vector<int>& nums) {

        // 1 2 2 2 3 3 5 7
        sort(nums.begin(), nums.end());

        int left = 0;
        int right = 1;
        int n = nums.size();
        int ans = 0;
        while (right < n) {
            while (nums[right] - nums[left] > 1) {
                // shrink window from left
                left++;
            }
            if (nums[right] - nums[left] == 1) {
                ans = max(ans, right - left + 1);
            }
            right++;
        }

        return ans;
    }
};