
https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/description/?envType=daily-question&envId=2025-06-30



class Solution {
public:
    int numSubseq(vector<int>& nums, int target) {

        const int MOD = 1e9 + 7;
        int n = nums.size();
        sort(nums.begin(), nums.end());

        // Precompute powers of 2 up to n
        vector<int> pow2(n, 1);
        for (int i = 1; i < n; ++i)
            pow2[i] = (pow2[i - 1] * 2) % MOD;

        int result = 0;
        for (int i = 0; i < n; ++i) {
            int remain = target - nums[i];
            // Find rightmost index j such that nums[j] <= remain
            int left = i, right = n - 1, j = -1;
            while (left <= right) {
                int mid = left + (right - left) / 2;
                if (nums[mid] <= remain) {
                    j = mid;
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            }

            if (j >= i) {
                result = (result + pow2[j - i]) % MOD;
            }
        }

        return result;
    }
};