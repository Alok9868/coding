https://leetcode.com/problems/divide-array-into-arrays-with-max-difference/description/?envType=daily-question&envId=2024-02-01

class Solution {
public:
    vector<vector<int>> divideArray(vector<int>& nums, int k) {

        // k =2
        // 1 1 3 3 4 5 7 8 9
        int n=nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;

        //k=3
        //3 3 7
        //i= 0
        // first =1
        //last=3
        for(int i=0;i<n;i++)
        {
            vector<int>temp;
            int first=nums[i];
            int last=nums[i+2];
            if(last-first>k)
            {
                vector<vector<int>>res;
                return res;
            }
            for(int k=0;k<3;k++)
            {
                temp.push_back(nums[i+k]);
            }
            i+=2;
            ans.push_back(temp);
        }


        return ans;





    }
};
