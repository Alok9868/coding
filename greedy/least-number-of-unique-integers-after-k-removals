https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals/description/?envType=daily-question&envId=2024-02-16

i have put this ques in greedy bcz , this question can also be solved using recursion , but 
after counting the freq and removing the unique no , we can get the no in least time .
 T.C - O(N) 
S.C -O(N)

class Solution {
public:
    int findLeastNumOfUniqueInts(vector<int>& arr, int k) {

        unordered_map<int,int>umap;
        int n=arr.size();
        for(int i=0;i<n;i++)
        {
            umap[arr[i]]++;
        }

        vector<int>freq;
        for(auto it:umap)
        {
            freq.push_back(it.second);
        }

        sort(freq.begin(),freq.end());


        // 3- 3
        // 4- 1
        // 2 -1
        // 1-2 

        // 1 1 2 3 
        int ans=0;
        int i;
        for( i=0;i<freq.size();i++)
        {
            if(k-freq[i]>=0)
            {
                k=k-freq[i];
                ans++;
            }
            else
            {
                break;
            }
        }

        return freq.size()-i;



        
    }
};
